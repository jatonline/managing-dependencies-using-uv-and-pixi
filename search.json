[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Can others reproduce your results?Using uv and pixi in Python data analysis projects",
    "section": "",
    "text": "Reproducible programming environments are crucial for ensuring consistent and reliable software development. They enable developers to recreate exact configurations, facilitating collaboration and long-term maintenance of projects.\nThese talks demonstrate uv and pixi - environment management tools for Python, for PyPI and conda packages (respectively). They show how as a data scientist, research software engineer or scientific coder, you might take practical steps to incorporate them into your project."
  },
  {
    "objectID": "index.html#viewing-the-resources",
    "href": "index.html#viewing-the-resources",
    "title": "Can others reproduce your results?Using uv and pixi in Python data analysis projects",
    "section": "Viewing the resources",
    "text": "Viewing the resources\nChoose the tool you‚Äôd like to know more about:\n\nuvpixi\n\n\n\nuv\n   1 April 2025\n\nüìÑ Slides (with embedded videos)\n\n\nüí° Summary\n\nuv automates the creation of virtual environments and the installation of specific versions of Python and PyPI (pip) packages inside them.\nIt manages a lockfile for you, that ensures the exact same versions of all your dependencies can be installed on a fresh system. This is especially useful if you‚Äôre collaborating with others. Unlike pip, it ensures all your dependencies are compatible with each other.\nIt helps you follow best-practices, such as creating projects with an importable package (for shared library functions), and defining project scripts.\nIt allows you to create isolated scripts which define their dependencies in a special comment at the top of the file.\nIt allows you to use temporarily add additional packages to environment (such as JupyterLab) to a disposable environment.\nIt allows you to use and install system-wide tools (such as the formatter, Ruff).\n\n\n\nüíæ Files to version control\n\npyproject.toml\n\nproject settings\n\nuv.lock\n\nlockfile (do not edit by hand)\n\n\n\n\nüíª Key commands\nFirst, install uv, restart your terminal, and run:\n\nuv init\n\ncreate a project\n\nuv init --package\n\ncreate a project with an importable package (for shared library functions)\n\nuv init --script my_isolated_script.py\n\ncreate a script that will run in an isolated environment\n\nuv add pandas\n\ninstall packages\n\nuv run my_script.py\n\nrun a Python script in the environment (typing python is not required)\n\nuv run jupyter lab\n\nrun an already-installed program in the environment (such as JupyterLab)\n\nuv run --with jupyter jupyter lab\n\ntemporarily add a package (that is not installed) to an environment and run a command from it (such as JupyterLab)\n\nuv run my_task\n\nrun a project script (defined in pyproject.toml)\n\nuv tree\n\nsee installed packages and dependencies\n\nuv tool install ruff\n\ninstall a tool that can be used system-wide (such as the formatter, Ruff)\n\nuvx ruff\n\nsimilar to above, but don‚Äôt formally install the tool, just download and run it\n\n\n\n\nüßë‚Äçüíª Example data science project layout\n\n\npyproject.toml\nnotebooks/\n\nexample_notebook.ipynb\n\nsrc/my_project/\n\nprobability.py\n\n\n\n\n\nüìö Further reading\n\nuv project website\nuv CLI reference\npyproject.toml reference\nAnother video from RSE South West (10 February 2025) \n\n\n\n\n\n\npixi\n   29 April 2025\n\nüìÑ Slides (with embedded videos)\n\n\nüí° Summary\n\npixi automates the creation of conda environments and the installation of specific versions of Python, conda and PyPI (pip) packages inside them.\nIt manages a lockfile for you, that ensures the exact same versions of all your dependencies can be installed on a fresh system. This is especially useful if you‚Äôre collaborating with others. Unlike conda, it can work with collaborators using different platforms. Unlike pip, it ensures all your dependencies are compatible with each other.\nIt helps you follow best-practices, such as creating projects (or workspaces) with an importable package (for shared library functions), and defining project tasks.\nIt allows you to use and install system-wide tools (such as the formatter, Ruff).\n\n\n\nüíæ Files to version control\n\npixi.toml/pyproject.toml\n\nproject (or workspace) settings\n\npixi.lock\n\nlockfile (do not edit by hand)\n\n\n\n\nüíª Key commands\nFirst, install pixi, restart your terminal, and run:\n\npixi init\n\ncreate a project (or workspace), using pixi.toml as the project configuration file.\n\npixi init --format pyproject\n\ncreate a project with an importable package (for shared library functions), using pyproject.toml as the project configuration file.\n\npixi add pandas\n\ninstall packages\n\npixi run python my_script.py\n\nrun a Python script in the environment\n\npixi run jupyter lab\n\nrun an installed program in the environment (such as JupyterLab)\n\npixi run my_task\n\nrun a project task (defined in pixi.toml/pyproject.toml)\n\npixi tree\n\nsee installed packages and dependencies\n\npixi workspace platform add linux-64 osx-arm64 win-64\n\nconfigure the project to support multiple platforms that other developers may be using\n\npixi global install ruff\n\ninstall a tool that can be used system-wide (such as the formatter, Ruff)\n\npixi exec ruff\n\nsimilar to above, but don‚Äôt formally install the tool, just download and run it\n\n\n\n\nüßë‚Äçüíª Example data science project layout\n\n\npyproject.toml\nnotebooks/\n\nexample_notebook.ipynb\n\nsrc/my_project/\n\nprobability.py\n\n\n\n\n\nüìö Further reading\n\nPixi project website\npixi CLI reference\npixi.toml/pyproject.toml reference"
  },
  {
    "objectID": "index.html#development",
    "href": "index.html#development",
    "title": "Can others reproduce your results?Using uv and pixi in Python data analysis projects",
    "section": "Development",
    "text": "Development\nFor information on changing these slides or running the live demos, see the GitHub repo."
  },
  {
    "objectID": "index.html#licence",
    "href": "index.html#licence",
    "title": "Can others reproduce your results?Using uv and pixi in Python data analysis projects",
    "section": "Licence",
    "text": "Licence\nCC BY 4.0"
  }
]